---
---
html,
body,
#map {
    font-family: sans-serif;
    font-size: 12px;
    padding: 0;
    margin: 0;
    height: 100%;
    width: 100%;
}

.btn {
    display: inline-block;
    margin-bottom: 0;
    font-weight: normal;
    text-align: center;
    vertical-align: middle;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none;
    border: 1px solid transparent;
    white-space: nowrap;
    padding: 6px 12px;
    font-size: 14px;
    line-height: 1.42857143;
    border-radius: 4px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.btn-xs, .btn-group-xs>.btn {
    margin-top: -3px;
    padding: 1px 5px;
    font-size: 12px;
    line-height: 1.5;
    border-radius: 3px;
}

.map-container {
    height: 100%;
    position: relative;
    width: 100%;
}

.layer-control {
    background-color: #fff;
    border: solid 1px #999999;
    left: 15px;
    padding: 10px;
    position: absolute;
    top: 175px;
    z-index: 9;
    width: 250px;
}

.layer-control ul {
    list-style-type: none;
    margin: 10px 0 0;
    padding: 0;
}

.layer-control li {
    margin: 7px 0 0;
}

.layer-control label {
    margin-left: 20px;
    display: block;
}

.layer-control input[type=radio] {
    float: left;
    margin: 0;
}

/* .icon-layers {
    background: url('../img/icon-layers.png') center center no-repeat #fff;
    left: 15px;
    position: absolute;
    top: 175px;
    z-index: 9;
} */

#btn-closeLayerCtrl {
       display: inline-block;
       margin-top: -3px;
}

@media (min-width: 480px) {
    .layer-control {
        display: block !important;
        left: inherit;
        bottom: 30px;    
        right: 20px;
        top: inherit;
        width: auto;
    }

    #btn-closeLayerCtrl, #btn-openLayerCtrl {
        display: none;
    }
}

.map-legend {
    background-color: #fff;
    border: solid 1px #999999;
    bottom: 30px;
    left: 20px;
    min-width: 150px;
    padding: 5px;
    position: absolute;
    z-index: 2
}



.slidecontainer {
  width: 100%;
  bottom: 30px;
  left: 100px;
}





.map-legend .icon-list {
    font-size: 13px
}

.map-legend table {
    width: 100%
}

/* .map-legend tbody td:first-child {
    height: 28px;
    width: 28px
} */

.legend__icon {
    background-color: transparent;
    bottom: 30px;
    font-size: 16px;
    cursor: pointer;
    left: 20px;
    padding: 0;
    position: absolute;
    z-index: 1
}

.legend__icon:focus,
.legend__icon:active {
    outline: none
}

.key-symbol {
    border: solid 1px #999;
    height: 20px;
    width: 20px
}


 .key-symbol-line {
    border: solid 1px #999;
    height: 0px;
    width: 25px
} 

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
}

.esri-popup-renderer li {
    font-size: 14px;
}


@mixin can-toggle-branding(
  $can-toggle-off-color: #777, 
  $can-toggle-on-color: #777,
  $can-toggle-inactive-text: rgba(white, 0.5),
  $can-toggle-transition: cubic-bezier(0,1,0.5,1)
) {
  
  input[type="checkbox"] {
    
    &[disabled] ~ label {
      color: rgba($can-toggle-off-color, 0.5);
    }
    
    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        background-color: $can-toggle-off-color;
        &:after { color: darken($can-toggle-off-color, 10%); }
      }
    }
    &:hover ~label { color: darken($can-toggle-off-color, 5%); }
    &:checked {
      ~ label {
        &:hover { color: darken($can-toggle-on-color, 3%); }
        
        .can-toggle__switch {
          background-color: lighten($can-toggle-on-color, 5%);
          &:after { color: darken($can-toggle-on-color, 5%); }
        }
      }
      
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch {
            background-color: $can-toggle-on-color;
            &:after { color: darken($can-toggle-on-color, 10%); }
          }
        } 
      }
    }
  }
  
  label {
    
    .can-toggle__label-text { flex: 1; }
    
    .can-toggle__switch {
      transition: background-color 0.3s $can-toggle-transition;
      background: lighten($can-toggle-off-color, 5%);
      &:before { color: $can-toggle-inactive-text; }
      &:after {
        // Autoprefixer choked here, so making the prefixes explicit
        -webkit-transition: -webkit-transform 0.3s $can-toggle-transition;
        transition: transform 0.3s $can-toggle-transition;
        color: $can-toggle-off-color; 
      }
    }
    
  }
}

@mixin can-toggle-appearance 
( 
  $can-toggle-width: 134px,
  $can-toggle-height: 36px,
  $can-toggle-border-radius: 4px,
  $can-toggle-offset: 2px,
  $can-toggle-label-font-size: 14px,
  $can-toggle-switch-font-size: 12px,
  $can-toggle-shadow: 0 3px 3px rgba(black, 0.4)
){
  $can-toggle-switch-width: $can-toggle-width/2;
  
  input[type="checkbox"] {

    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        &:after { box-shadow: $can-toggle-shadow; } 
      }
    }
    
    &:checked {
      ~ label {
        .can-toggle__switch {
          &:after { transform: translate3d($can-toggle-width - ($can-toggle-switch-width + $can-toggle-offset),0,0); }  
        }
      }
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch { &:after { box-shadow: $can-toggle-shadow; } }
        } 
      }
    }
  }
  
  label {
    font-size: $can-toggle-label-font-size;
    
    .can-toggle__switch {
      height: $can-toggle-height;
      flex: 0 0 $can-toggle-width;
      border-radius: $can-toggle-border-radius;
      
      &:before {
        left: $can-toggle-width/2;
        font-size: $can-toggle-switch-font-size; 
        line-height: $can-toggle-height;
        width: $can-toggle-width/2;
        padding: 0 12px;
      }
      
      &:after {
        top: $can-toggle-offset; left: $can-toggle-offset;
        border-radius: $can-toggle-border-radius/2;
        width: $can-toggle-switch-width - $can-toggle-offset; 
        line-height: $can-toggle-height - ($can-toggle-offset*2);
        font-size: $can-toggle-switch-font-size;
      }
      
      &:hover {
        &:after { box-shadow: $can-toggle-shadow; }
      }
    } 
  }
}



.can-toggle {
  position: relative;
  *, *:before, *:after { box-sizing: border-box; }
  //overflow: hidden;
  
  input[type="checkbox"] {
    opacity: 0;
    position: absolute;
    top: 0; left: 0;
    
    &[disabled] ~ label {
      pointer-events: none;
      .can-toggle__switch { opacity: 0.4; }
    }
    
    &:checked {
      ~ label {
        
        .can-toggle__switch {
        
          &:before {
            content: attr(data-unchecked);
            left: 0;
          }
        
          &:after {
            content: attr(data-checked);
          }  
        }
      }
      
      &:focus, &:hover {
        ~ label {
        } 
      }
    }
  }
  
  label {
    user-select: none;
    position: relative;
    display: flex;
    align-items: center;
    
    .can-toggle__label-text { 
      flex: 1;
      padding-left: 32px;
    }
    
    .can-toggle__switch {
      position: relative;
      
      &:before {
        content: attr(data-checked);
        position: absolute;
        top: 0;
        text-transform: uppercase;
        text-align: center;
      }
      
      &:after {
        content: attr(data-unchecked);
        position: absolute;
        z-index: 5;
        text-transform: uppercase;
        text-align: center;
        background: white;
        transform: translate3d(0,0,0);
      }

    }
    
  }
  
  // Default values for .can-toggle class
  @include can-toggle-branding; 
  @include can-toggle-appearance; 
  
  // Create toggles of different sizes by overriding the can-toggle-appearance mixin defaults
  &.can-toggle--size-small {
    @include can-toggle-appearance
    (
      230px, // Toggle width
      28px,  // Toggle height
      2px,   // Toggle border radius
      1px,   // Offset (distance btw switch and box)
      13px,  // Label font size
      10px,  // Switch font size
      0 2px 2px rgba(black, 0.4) // Switch shadow on hover/focus
    ); 
  }
  
  &.can-toggle--size-large {
    @include can-toggle-appearance
    (
      160px, // Toggle width
      50px,  // Toggle height
      4px,   // Toggle border radius
      2px,   // Offset (distance btw switch and box)
      14px,  // Label font size
      14px,  // Switch font size
      0 4px 4px rgba(black, 0.4) // Switch shadow on hover/focus
    ); 
  }
  
  // Or re-brand the toggle for different applications
  &.demo-rebrand-1 {
    @include can-toggle-branding
    (
      #b53e74,  // Off state color
      #3d9c72,  // On state color
      rgba(white, 0.6),  // Off state text color
      ease-in-out  // Transition timing function
    ); 
  }
  
  &.demo-rebrand-2 {
    @include can-toggle-branding
    (
      #444,  // Off state color
      #69be28,  // On state color
      rgba(white, 0.7),  // Off state text color
      cubic-bezier(0.860, 0.000, 0.070, 1.000)  // Transition timing function
    );
    @include can-toggle-appearance
    (
      120px, // Toggle width
      60px,  // Toggle height
      60px,   // Toggle border radius
      2px,   // Offset (distance btw switch and box)
      13px,  // Label font size
      13px,  // Switch font size
      0 4px 4px rgba(black, 0.4) // Switch shadow on hover/focus
    ); 
  }
  
}




.frame {
	position: absolute;
	bottom: 32px;
	left: 42%;
	width: 300px;
	margin-top: -200px;
	margin-left: -200px;
	border-radius: 2px;
	overflow: hidden;
	color: #333;
	font-family: "Open Sans", Helvetica, sans-serif;
  height: 35px;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	display: flex;
	align-items: center;
	justify-content: center;
}

.range {
	background: #fff;
	height: 2rem;
	width: 55%;
	border-radius: 5rem;
	box-shadow: 1px 5px 5px rgba(black, 0.3);
	display: flex;
	align-items: center;
	justify-content: center;
}

input[type="range"] {
	-webkit-appearance: none;
	width: 80%;
	height: 100%;
	background: transparent;

	&:focus {
		outline: none;
	}

	//WEBKIT
	&::-webkit-slider-thumb {
		-webkit-appearance: none;
		height: 16px;
		width: 16px;
		border-radius: 50%;
		background: #ffffff;
		margin-top: -5px;
		box-shadow: 1px 1px 2px rgba(#000, 0.5);
    bottom: 32px;
		cursor: pointer;
		
	}

	&::-webkit-slider-runnable-track {
		width: 60%;
		height: 9px;
		background: #bdbdbd;
		border-radius: 3rem;

		transition: all 0.5s;
		cursor: pointer;
	}

	&:hover::-webkit-slider-runnable-track {
		background: #949494;
	}

	// IE

	&::-ms-track {
		width: 60%;
		cursor: pointer;
		height: 9px;

		transition: all 0.5s;
		/* Hides the slider so custom styles can be added */
		background: transparent;
		border-color: transparent;
		color: transparent;
	}

	&::-ms-thumb {
		height: 16px;
		width: 16px;
		border-radius: 50%;
		background: #ffffff;
		margin-top: -5px;
		box-shadow: 1px 1px 2px rgba(#000, 0.5);

		cursor: pointer;
	}

	&::-ms-fill-lower {
		background: #bdbdbd;
		border-radius: 3rem;
	}
	&:focus::-ms-fill-lower {
		background: #ff6e40;
	}
	&::-ms-fill-upper {
		background: #bdbdbd;
		border-radius: 3rem;
	}
	&:focus::-ms-fill-upper {
		background: #ff6e40;
	}

	//FIREFOX
	&::-moz-range-thumb {
		height: 16px;
		width: 16px;
		border-radius: 50%;
		background: #ffffff;
		margin-top: -5px;
		box-shadow: 1px 1px 2px rgba(#000, 0.5);

		cursor: pointer;
	}

	&::-moz-range-track {
		width: 60%;
		height: 9px;
		background: #bdbdbd;
		border-radius: 3rem;

		transition: all 0.5s;
		cursor: pointer;
	}
	&:hover::-moz-range-track {
		background: #ff6e40;
	}
}















html,
body,
#map {
    font-family: sans-serif;
    font-size: 12px;
    padding: 0;
    margin: 0;
    height: 100%;
    width: 100%;
}

.btn {
    display: inline-block;
    margin-bottom: 0;
    font-weight: normal;
    text-align: center;
    vertical-align: middle;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none;
    border: 1px solid transparent;
    white-space: nowrap;
    padding: 6px 12px;
    font-size: 14px;
    line-height: 1.42857143;
    border-radius: 4px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.btn-xs, .btn-group-xs>.btn {
    margin-top: -3px;
    padding: 1px 5px;
    font-size: 12px;
    line-height: 1.5;
    border-radius: 3px;
}

.map-container {
    height: 100%;
    position: relative;
    width: 100%;
}

.layer-control {
    background-color: #fff;
    border: solid 1px #999999;
    left: 15px;
    padding: 10px;
    position: absolute;
    top: 175px;
    z-index: 9;
    width: 250px;
}

.layer-control ul {
    list-style-type: none;
    margin: 10px 0 0;
    padding: 0;
}

.layer-control li {
    margin: 7px 0 0;
}

.layer-control label {
    margin-left: 20px;
    display: block;
}

.layer-control input[type=radio] {
    float: left;
    margin: 0;
}

/* .icon-layers {
    background: url('../img/icon-layers.png') center center no-repeat #fff;
    left: 15px;
    position: absolute;
    top: 175px;
    z-index: 9;
} */

#btn-closeLayerCtrl {
       display: inline-block;
       margin-top: -3px;
}

@media (min-width: 480px) {
    .layer-control {
        display: block !important;
        left: inherit;
        bottom: 30px;    
        right: 20px;
        top: inherit;
        width: auto;
    }

    #btn-closeLayerCtrl, #btn-openLayerCtrl {
        display: none;
    }
}

.map-legend {
    background-color: #fff;
    border: solid 1px #999999;
    bottom: 30px;
    left: 20px;
    min-width: 150px;
    padding: 5px;
    position: absolute;
    z-index: 2
}



.slidecontainer {
  width: 100%;
  bottom: 30px;
  left: 100px;
}





.map-legend .icon-list {
    font-size: 13px
}

.map-legend table {
    width: 100%
}

/* .map-legend tbody td:first-child {
    height: 28px;
    width: 28px
} */

.legend__icon {
    background-color: transparent;
    bottom: 30px;
    font-size: 16px;
    cursor: pointer;
    left: 20px;
    padding: 0;
    position: absolute;
    z-index: 1
}

.legend__icon:focus,
.legend__icon:active {
    outline: none
}

.key-symbol {
    border: solid 1px #999;
    height: 20px;
    width: 20px
}


 .key-symbol-line {
    border: solid 1px #999;
    height: 0px;
    width: 25px
} 

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
}

.esri-popup-renderer li {
    font-size: 14px;
}


@mixin can-toggle-branding(
  $can-toggle-off-color: #777, 
  $can-toggle-on-color: #777,
  $can-toggle-inactive-text: rgba(white, 0.5),
  $can-toggle-transition: cubic-bezier(0,1,0.5,1)
) {
  
  input[type="checkbox"] {
    
    &[disabled] ~ label {
      color: rgba($can-toggle-off-color, 0.5);
    }
    
    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        background-color: $can-toggle-off-color;
        &:after { color: darken($can-toggle-off-color, 10%); }
      }
    }
    &:hover ~label { color: darken($can-toggle-off-color, 5%); }
    &:checked {
      ~ label {
        &:hover { color: darken($can-toggle-on-color, 3%); }
        
        .can-toggle__switch {
          background-color: lighten($can-toggle-on-color, 5%);
          &:after { color: darken($can-toggle-on-color, 5%); }
        }
      }
      
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch {
            background-color: $can-toggle-on-color;
            &:after { color: darken($can-toggle-on-color, 10%); }
          }
        } 
      }
    }
  }
  
  label {
    
    .can-toggle__label-text { flex: 1; }
    
    .can-toggle__switch {
      transition: background-color 0.3s $can-toggle-transition;
      background: lighten($can-toggle-off-color, 5%);
      &:before { color: $can-toggle-inactive-text; }
      &:after {
        // Autoprefixer choked here, so making the prefixes explicit
        -webkit-transition: -webkit-transform 0.3s $can-toggle-transition;
        transition: transform 0.3s $can-toggle-transition;
        color: $can-toggle-off-color; 
      }
    }
    
  }
}

@mixin can-toggle-appearance 
( 
  $can-toggle-width: 134px,
  $can-toggle-height: 36px,
  $can-toggle-border-radius: 4px,
  $can-toggle-offset: 2px,
  $can-toggle-label-font-size: 14px,
  $can-toggle-switch-font-size: 12px,
  $can-toggle-shadow: 0 3px 3px rgba(black, 0.4)
){
  $can-toggle-switch-width: $can-toggle-width/2;
  
  input[type="checkbox"] {

    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        &:after { box-shadow: $can-toggle-shadow; } 
      }
    }
    
    &:checked {
      ~ label {
        .can-toggle__switch {
          &:after { transform: translate3d($can-toggle-width - ($can-toggle-switch-width + $can-toggle-offset),0,0); }  
        }
      }
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch { &:after { box-shadow: $can-toggle-shadow; } }
        } 
      }
    }
  }
  
  label {
    font-size: $can-toggle-label-font-size;
    
    .can-toggle__switch {
      height: $can-toggle-height;
      flex: 0 0 $can-toggle-width;
      border-radius: $can-toggle-border-radius;
      
      &:before {
        left: $can-toggle-width/2;
        font-size: $can-toggle-switch-font-size; 
        line-height: $can-toggle-height;
        width: $can-toggle-width/2;
        padding: 0 12px;
      }
      
      &:after {
        top: $can-toggle-offset; left: $can-toggle-offset;
        border-radius: $can-toggle-border-radius/2;
        width: $can-toggle-switch-width - $can-toggle-offset; 
        line-height: $can-toggle-height - ($can-toggle-offset*2);
        font-size: $can-toggle-switch-font-size;
      }
      
      &:hover {
        &:after { box-shadow: $can-toggle-shadow; }
      }
    } 
  }
}



.can-toggle {
  position: relative;
  *, *:before, *:after { box-sizing: border-box; }
  //overflow: hidden;
  
  input[type="checkbox"] {
    opacity: 0;
    position: absolute;
    top: 0; left: 0;
    
    &[disabled] ~ label {
      pointer-events: none;
      .can-toggle__switch { opacity: 0.4; }
    }
    
    &:checked {
      ~ label {
        
        .can-toggle__switch {
        
          &:before {
            content: attr(data-unchecked);
            left: 0;
          }
        
          &:after {
            content: attr(data-checked);
          }  
        }
      }
      
      &:focus, &:hover {
        ~ label {
        } 
      }
    }
  }
  
  label {
    user-select: none;
    position: relative;
    display: flex;
    align-items: center;
    
    .can-toggle__label-text { 
      flex: 1;
      padding-left: 32px;
    }
    
    .can-toggle__switch {
      position: relative;
      
      &:before {
        content: attr(data-checked);
        position: absolute;
        top: 0;
        text-transform: uppercase;
        text-align: center;
      }
      
      &:after {
        content: attr(data-unchecked);
        position: absolute;
        z-index: 5;
        text-transform: uppercase;
        text-align: center;
        background: white;
        transform: translate3d(0,0,0);
      }

    }
    
  }
  
  // Default values for .can-toggle class
  @include can-toggle-branding; 
  @include can-toggle-appearance; 
  
  // Create toggles of different sizes by overriding the can-toggle-appearance mixin defaults
  &.can-toggle--size-small {
    @include can-toggle-appearance
    (
      230px, // Toggle width
      28px,  // Toggle height
      2px,   // Toggle border radius
      1px,   // Offset (distance btw switch and box)
      13px,  // Label font size
      10px,  // Switch font size
      0 2px 2px rgba(black, 0.4) // Switch shadow on hover/focus
    ); 
  }
  
  &.can-toggle--size-large {
    @include can-toggle-appearance
    (
      160px, // Toggle width
      50px,  // Toggle height
      4px,   // Toggle border radius
      2px,   // Offset (distance btw switch and box)
      14px,  // Label font size
      14px,  // Switch font size
      0 4px 4px rgba(black, 0.4) // Switch shadow on hover/focus
    ); 
  }
  
  // Or re-brand the toggle for different applications
  &.demo-rebrand-1 {
    @include can-toggle-branding
    (
      #b53e74,  // Off state color
      #3d9c72,  // On state color
      rgba(white, 0.6),  // Off state text color
      ease-in-out  // Transition timing function
    ); 
  }
  
  &.demo-rebrand-2 {
    @include can-toggle-branding
    (
      #444,  // Off state color
      #69be28,  // On state color
      rgba(white, 0.7),  // Off state text color
      cubic-bezier(0.860, 0.000, 0.070, 1.000)  // Transition timing function
    );
    @include can-toggle-appearance
    (
      120px, // Toggle width
      60px,  // Toggle height
      60px,   // Toggle border radius
      2px,   // Offset (distance btw switch and box)
      13px,  // Label font size
      13px,  // Switch font size
      0 4px 4px rgba(black, 0.4) // Switch shadow on hover/focus
    ); 
  }
  
}




.frame {

}

.range {

}

input[type="range"] {
	-webkit-appearance: none;
  position: relative;
	background: transparent;
  display: block;
  margin : 0 auto;
	&:focus {
		outline: none;
	}

}



.radio_text {
  font-size: 15px;
}


.checkbox, .radio {
    position: relative;
    display: left;
    margin : 0 auto;
    margin-top: 5px;
    margin-bottom: 5px;
    padding-left: 20px;
}


.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
}

.close {
  color: #aaaaaa;
  float: right;
  font-size: 10px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}



.simmons {
  color: #aaaaaa;
  float: right;
  font-size: 10px;
  font-weight: bold;
}

.simmons:hover,
.simmons:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}







